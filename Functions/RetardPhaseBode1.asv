%**************************************************************************
% 
% Fichier: RetardPhaseBode1.m
% Date: 2019-12-03
% Université de Sherbrooke - Génie électrique
% 
% Équipe P4:
%           Brittany Latour - latb2901 
%           Samuel Mathieu - mats2510 
%           Jacob Fortin - forj1928 
%           Gabriel Lavoie - lavg2007 
%           Olivier Chrétien-Rioux - chro2901 
%           Sarah Clauzade - clas2902 
%           Thierry Letalnet - lett2101 
%
% Résumé: Permet la conception d'un compensateur a retard de phase à l'aide
% des valeurs désirées de vitesse angulaire, d'erreur en régime permanant
% et de marge.
% 
% Entrés:  FTBO -> Une fonction de transfert en boucle ouverte
%          erp_s -> Erreur en régime permanent désirée
%          wg_s -> Vitesse angulaire désirée
%          marge -> Marge désirée
% 
% Sortie:  Gr -> Fonction de transfert du compensateur à retard de phase
% 
%**************************************************************************

function [ Gr ] = RetardPhaseBode1( FTBO, erp_s, wg_s, marge )

classe  = getClasse(FTBO);

Kvel_s = 1/erp_s;
Kvel = FTBO.Numerator{:}(end)/FTBO.Denominator{:}(end-classe);
K_s = Kvel_s/Kvel;

att = (norm(polyval(FTBO.Numerator{:},1i*wg_s)/polyval(FTBO.Denominator{:},1i*wg_s)));

if att == 1
    B = K_s;
else
    [numK_s, denK_s] = tfdata(FTBO*K_s,'v');
    B = (norm(polyval(numK_s,1i*wg_s)/polyval(denK_s,1i*wg_s)));
end
B;

T = marge/wg_s;

z = -1/T;
p = -1/(B*T);
Kr = K_s/B;

Gr = tf([1 -z],[1 -p]);
Gr = Gr*Kr;

end

